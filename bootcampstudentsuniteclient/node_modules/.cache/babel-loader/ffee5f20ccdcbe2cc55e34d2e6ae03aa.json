{"ast":null,"code":"var _jsxFileName = \"/Users/ericathompson/workspace/bootcamp-students-unite-client/bootcampstudentsuniteclient/src/auth/Login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  const email = /*#__PURE__*/React.createRef();\n  const password = /*#__PURE__*/React.createRef();\n  const invalidDialog = /*#__PURE__*/React.createRef();\n\n  const handleLogin = e => {\n    e.preventDefault();\n    return fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        username: email.current.value,\n        password: password.current.value\n      })\n    }).then(res => res.json()).then(res => {\n      if (\"valid\" in res && res.valid && \"token\" in res) {\n        localStorage.setItem(\"bc_token\", res.token);\n        localStorage.setItem(\"id\", res.id);\n        props.history.push(\"/\");\n      } else {\n        invalidDialog.current.showModal();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container--login\",\n    children: [/*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"dialog dialog--auth\",\n      ref: invalidDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email or password was not valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button--close\",\n        onClick: e => invalidDialog.current.close(),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form--login\",\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to the community made just for you! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputEmail\",\n            children: \" Email address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: email,\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email address\",\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputPassword\",\n            children: \" Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: password,\n            type: \"password\",\n            id: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-1 btn-sep icon-send\",\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"link--register\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Not a member yet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ericathompson/workspace/bootcamp-students-unite-client/bootcampstudentsuniteclient/src/auth/Login.js"],"names":["React","Link","Login","props","email","createRef","password","invalidDialog","handleLogin","e","preventDefault","fetch","method","headers","Authorization","localStorage","getItem","Accept","body","JSON","stringify","username","current","value","then","res","json","valid","setItem","token","id","history","push","showModal","close","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Auth.css\";\n\nexport const Login = (props) => {\n  const email = React.createRef();\n  const password = React.createRef();\n  const invalidDialog = React.createRef();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    return fetch(\"http://localhost:8000/login\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: email.current.value,\n        password: password.current.value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (\"valid\" in res && res.valid && \"token\" in res) {\n          localStorage.setItem(\"bc_token\", res.token);\n          localStorage.setItem(\"id\", res.id);\n          props.history.push(\"/\");\n        } else {\n          invalidDialog.current.showModal();\n        }\n      });\n  };\n\n  return (\n    <main className=\"container--login\">\n      <dialog className=\"dialog dialog--auth\" ref={invalidDialog}>\n        <div>Email or password was not valid.</div>\n        <button\n          className=\"button--close\"\n          onClick={(e) => invalidDialog.current.close()}\n        >\n          Close\n        </button>\n      </dialog>\n      <section>\n        <form className=\"form--login\" onSubmit={handleLogin}>\n          <h1>Welcome to the community made just for you! </h1>\n          <h2>Please sign in</h2>\n          <fieldset>\n            <label htmlFor=\"inputEmail\"> Email address </label>\n            <input\n              ref={email}\n              type=\"email\"\n              id=\"email\"\n              className=\"form-control\"\n              placeholder=\"Email address\"\n              required\n              autoFocus\n            />\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"inputPassword\"> Password </label>\n            <input\n              ref={password}\n              type=\"password\"\n              id=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              required\n            />\n          </fieldset>\n          <fieldset\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            <button className=\"btn btn-1 btn-sep icon-send\" type=\"submit\">\n              Sign In\n            </button>\n          </fieldset>\n        </form>\n      </section>\n      <section className=\"link--register\">\n        <Link to=\"/register\">Not a member yet?</Link>\n      </section>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}