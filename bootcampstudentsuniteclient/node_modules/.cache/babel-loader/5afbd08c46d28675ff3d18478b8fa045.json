{"ast":null,"code":"var _jsxFileName = \"/Users/ericathompson/workspace/bootcamp-students-unite-client/bootcampstudentsuniteclient/src/groupprojects/GroupProjectProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GroupProjectContext = /*#__PURE__*/React.createContext();\nexport const GroupProjectProvider = props => {\n  _s();\n\n  const [groupProjects, setGroupProjects] = useState([]);\n\n  const getGroupProjects = () => {\n    return fetch(\"http://localhost:8000/groupprojects\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`\n      }\n    }).then(response => response.json()).then(setGroupProjects);\n  };\n\n  const leaveGroupProject = groupProjectId => {\n    return fetch(`http://localhost:8000/groupprojects/${groupProjectId}/signup`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`\n      }\n    }).then(getGroupProjects);\n  };\n\n  const createGroupProject = groupProject => {\n    return fetch(\"http://localhost:8000/groupprojects\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(groupProject)\n    }).then(getGroupProjects);\n  };\n\n  const joinGroupProject = groupProjectId => {\n    return fetch(`http://localhost:8000/groupprojects/${groupProjectId}/signup`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`\n      }\n    }).then(getGroupProjects);\n  };\n\n  const DeleteGroupProject = projectId => {\n    return fetch(`http://localhost:8000/groupprojects/${projectId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`\n      }\n    }).then(getGroupProjects);\n  };\n\n  const updateGroupProject = groupProject => {\n    return fetch(`http://localhost:8000/groupprojects/${groupProject.id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(groupProject)\n    }).then(getGroupProjects);\n  };\n\n  const getGroupProjectById = id => {\n    return fetch(`http://localhost:8000/groupprojects/${id}`, {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`\n      }\n    }).then(res => res.json());\n  };\n\n  return /*#__PURE__*/_jsxDEV(GroupProjectContext.Provider, {\n    value: {\n      groupProjects,\n      getGroupProjects,\n      leaveGroupProject,\n      joinGroupProject,\n      createGroupProject,\n      getGroupProjectById,\n      DeleteGroupProject,\n      updateGroupProject\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GroupProjectProvider, \"5ylL8NrUdcAxjCU3qwayfgyr96w=\");\n\n_c = GroupProjectProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupProjectProvider\");","map":{"version":3,"sources":["/Users/ericathompson/workspace/bootcamp-students-unite-client/bootcampstudentsuniteclient/src/groupprojects/GroupProjectProvider.js"],"names":["React","useState","GroupProjectContext","createContext","GroupProjectProvider","props","groupProjects","setGroupProjects","getGroupProjects","fetch","headers","Authorization","localStorage","getItem","then","response","json","leaveGroupProject","groupProjectId","method","createGroupProject","groupProject","body","JSON","stringify","joinGroupProject","DeleteGroupProject","projectId","updateGroupProject","id","getGroupProjectById","res","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport const GroupProjectContext = React.createContext();\n\nexport const GroupProjectProvider = (props) => {\n  const [groupProjects, setGroupProjects] = useState([]);\n\n  const getGroupProjects = () => {\n    return fetch(\"http://localhost:8000/groupprojects\", {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n      },\n    })\n      .then((response) => response.json())\n      .then(setGroupProjects);\n  };\n\n  const leaveGroupProject = (groupProjectId) => {\n    return fetch(\n      `http://localhost:8000/groupprojects/${groupProjectId}/signup`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        },\n      }\n    ).then(getGroupProjects);\n  };\n\n  const createGroupProject = (groupProject) => {\n    return fetch(\"http://localhost:8000/groupprojects\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(groupProject),\n    }).then(getGroupProjects);\n  };\n\n  const joinGroupProject = (groupProjectId) => {\n    return fetch(\n      `http://localhost:8000/groupprojects/${groupProjectId}/signup`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        },\n      }\n    ).then(getGroupProjects);\n  };\n\n  const DeleteGroupProject = (projectId) => {\n    return fetch(`http://localhost:8000/groupprojects/${projectId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n      },\n    }).then(getGroupProjects);\n  };\n\n  const updateGroupProject = (groupProject) => {\n    return fetch(`http://localhost:8000/groupprojects/${groupProject.id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(groupProject),\n    }).then(getGroupProjects);\n  };\n\n  const getGroupProjectById = (id) => {\n    return fetch(`http://localhost:8000/groupprojects/${id}`, {\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"bc_token\")}`,\n      },\n    }).then((res) => res.json());\n  };\n\n  return (\n    <GroupProjectContext.Provider\n      value={{\n        groupProjects,\n        getGroupProjects,\n        leaveGroupProject,\n        joinGroupProject,\n        createGroupProject,\n        getGroupProjectById,\n        DeleteGroupProject,\n        updateGroupProject,\n      }}\n    >\n      {props.children}\n    </GroupProjectContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}